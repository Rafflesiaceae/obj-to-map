name: Release
on: [workflow_dispatch]

jobs:
  create_release:

    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      short_sha: ${{ steps.version.outputs.SHORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Retrieve version
        id: version
        run: |
          echo "::set-output name=SHORT::$(git rev-parse --short HEAD)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.version.outputs.SHORT }}
          release_name: Release ${{ steps.version.outputs.SHORT }}
          body: ""
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release
    strategy:
      matrix:
        os:
          - { id: ubuntu-latest  , bin_ext: ""     , arch: "linux_amd64" }
          - { id: macos-latest   , bin_ext: ""     , arch: "darwin_amd64" }
          - { id: windows-latest , bin_ext: ".exe" , arch: "windows_amd64" }
        nim-version:
          - 1.6.0

    runs-on: ${{ matrix.os.id }}

    steps:
      # {{{ Build
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache choosenim
        id: cache-choosenim
        uses: actions/cache@v3
        with:
          path: ~/.choosenim
          key: ${{ runner.os }}-choosenim-${{ matrix.nim-version}}

      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v3
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ matrix.nim-version}}-${{ hashFiles('*.nimble') }}

      - name: Setup nim
        uses: jiro4989/setup-nim-action@v1.3.51
        with:
          nim-version: ${{ matrix.nim-version }}

      - name: Install Packages
        run: nimble install -d -y
      - name: Test
        run: nimble test
      # }}}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: obj_to_map-${{ needs.create_release.outputs.short_sha }}-${{ matrix.os.arch }}${{ matrix.os.bin_ext }}
          asset_path: ./obj_to_map${{ matrix.os.bin_ext }}
          asset_content_type: application/octet-stream
